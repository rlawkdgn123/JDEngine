1. 게임 루프
루프 진입 전 : 로드, 초기화
루프 :
시간 업데이트
입력 업데이트
Update - 로직 업데이트
Rebnder - 그림 그리기

2. 씬 - 씬 매니저
* 씬을 만들어서 전환 해봄.
--> 루프 주체가 여기로 옮겨짐.
--> = 게임 공간 (월드) -> 모든 오브젝트를 가지고 업데이트

3. 리소스 관리
1Q - 비트맵 : 그냥 들고만 있음.
2Q - 에셋 매니저, 리소스 매니저 -> 관리가 들어감.

4. 애니메이션
프레임 기반으로 델타를 누적해서 프레임 인덱스를 바꾼다.

*png 리소스를 하나하나 프레임 별로 로드X
*json으로 메타 정보를 읽어서 구조화된 처리를 해봄 (스프라이트 시트를 받아 json정보대로 처리)

5. 월드 공간에서의 오브젝트의 위치와 이동
* 트랜스폼 : 계층 구조

6. 입력 처리
* FSM으로 이벤트를 발생시켜서 이동하게 할 수 있음.

게임오브젝트는 상태값(State), 현재 상태값(isChasing..), 이벤트(Chase..) 등을 가지고 있음.
해당 정보로 오브젝트의 상태를 관리함.

7. 씬은 게임 오브젝트들을 관리
--> 게임 오브젝트는 컴포넌트를 가지고 있음.
--> 게임 오브젝트는 트랜스폼 컴포넌트를 가지고 있어야 함.

키보드나 마우스로 인풋 Go 이벤트가 발생하면
델타 타임에 따라 거리 = 속도 * 시간
방향 계산해서 플레이어가 이동을 해야 합니다.

==> 카메라가 플레이어를 따라다니도록 설정하면 플레이어는
화면 상에 고정되어 있고, 배경이 움직이는 상태

드디어... 우리가 배운 모든 것들을 합해야 합니다.

* 오버랩 기능 (충돌 겪은 상태)는 필수이다.
- 충돌 박스가 겹쳤을 때 빨갛게 된다..